The JavaScript web development part is going very well, but you notice something strange when integrating to the client’s Python backend. You dig into the backend code base and notice that the client has implemented a lot of basic algorithms manually. Normally this would not be a problem, but some of the implementations are quite buggy and are causing you to have wrong results or even breaking your solution. Time to start debugging!

Binary Search 
Binary search is a searching technique that is based upon the Divide-and-Conquer Rule.

In this searching technique, a sorted array is divided into two equal halves and then the same technique is applied onto the two halves searching for the element by comparing the high and the low.
Algorithm of Binary Search in Java
while(left<=right)
      mid=left + (right – left)/2;
if(a[mid]<search_element)
      left=mid+1;
else if(a[mid]>search_element)
      right=mid-1;
If found return index+1
Else return -1


ZeroDivisionError: is a built-in Python exception thrown when a number is divided by 0. This means that the exception raised when the second argument of a division or modulo operation is zero. In Mathematics, when a number is divided by a zero, the result is an infinite number.

Indexerror: list index out of range error when you try and access an item using a value that is out of the index range of the list and does not exist.

This is quite common when you try to access the last item of a list, or the first one if you're using negative indexing.